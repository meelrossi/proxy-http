


Trabajo Practico Especial                                Octubre 7, 2015
TPE2015-2     




                    Trabajo Practico Especial 2015/2


Abstract

   Este documento describe el Trabajo Especial de la materia Protocolos
   de comunicacion para la cursada del segundo cuatrimestre de 2015.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].
































                                                                 [Page 1]

TPE2015-2                Trabajo Especial 2015-2            October 2015


Tabla de Contenidos

   1.  Requerimientos Funcionales  . . . . . . . . . . . . . . . . . . 3
     1.1.  Objetivo  . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.2.  Funcionamiento  . . . . . . . . . . . . . . . . . . . . . . 3
     1.3.  Concurrencia  . . . . . . . . . . . . . . . . . . . . . . . 3
     1.4.  Fallos  . . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.5.  Conexiones Persistentes . . . . . . . . . . . . . . . . . . 3
     1.6.  Metodos a implementar . . . . . . . . . . . . . . . . . . . 3
     1.7.  Registros de acceso . . . . . . . . . . . . . . . . . . . . 4
     1.8.  Metricas  . . . . . . . . . . . . . . . . . . . . . . . . . 4
     1.9.  Transformaciones de mensajes requeridos . . . . . . . . . . 4
     1.10. Configuracion . . . . . . . . . . . . . . . . . . . . . . . 4
     1.11. Monitoreo Remoto  . . . . . . . . . . . . . . . . . . . . . 4
   2.  Requerimientos No Funcionales . . . . . . . . . . . . . . . . . 5
     2.1.  Performance . . . . . . . . . . . . . . . . . . . . . . . . 5
     2.2.  Lenguaje  . . . . . . . . . . . . . . . . . . . . . . . . . 5
     2.3.  Librerias Externas  . . . . . . . . . . . . . . . . . . . . 5
   3.  Conformacion de los Grupos  . . . . . . . . . . . . . . . . . . 6
   4.  Entrega . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
     4.1.  Forma de Entrega  . . . . . . . . . . . . . . . . . . . . . 7
     4.2.  Presentacion Oral . . . . . . . . . . . . . . . . . . . . . 8
     4.3.  Fecha de Entrega  . . . . . . . . . . . . . . . . . . . . . 8
     4.4.  Penalizaciones  . . . . . . . . . . . . . . . . . . . . . . 8
   5.  Normative References  . . . . . . . . . . . . . . . . . . . . . 9


























                                                                 [Page 2]

TPE2015-2                Trabajo Especial 2015-2            October 2015


1.  Requerimientos Funcionales

1.1.  Objetivo

   El objetivo del trabajo es que los alumnos implementen un servidor
   proxy para el protocolo HTTP version 1.1 (Hypertext Transfer
   Protocol) [RFC2616] que pueda ser usado por User agents como Mozilla
   Firefox, Internet Exporer y Google Chrome para navegar por Internet.

   Los alumnos DEBEN demostrar habilidad para la programacion de
   aplicaciones cliente/servidor con sockets, la comprension de
   estandares de la industria, y que son capaces de disenar protocolos.

1.2.  Funcionamiento

   El servidor proxy DEBE poder ser usado desde los User Agents con
   configuracion previa de los mismos; y como proxy transparente.  No se
   desea implementar un servidor cache (seccion 13).

1.3.  Concurrencia

   El servidor proxy DEBE soportar multiples clientes de forma
   concurrente y simultanea.  Se DEBE tener en cuenta en la
   implementacion aquellos factores que afecten la performance.

1.4.  Fallos

   El servidor proxy DEBE reportar los fallos a los User-Agents usando
   toda la potencia del protocolo HTTP (revisar el status code 504
   Gateway Timeout)

1.5.  Conexiones Persistentes

   El proxy PUEDE soportar conexiones persistentes (RFC 2616 seccion
   8.1.1) desde los clientes y hacia los servidores.  En el caso de
   implementarlo, NO ES REQUERIDO implementar soporte para pipelining
   (8.1.2.2).

   Por ejemplo el proxy deberia reusar entre dos clientes diferentes una
   conexion persistente a un servidor (que ambos estan utilizando).

1.6.  Metodos a implementar

   Se DEBE soportar por lo menos los metodos GET, HEAD, y POST.  Si no
   se soporta el resto de los metodos se DEBE comunicar al cliente con
   el status code apropiado.





                                                                 [Page 3]

TPE2015-2                Trabajo Especial 2015-2            October 2015


1.7.  Registros de acceso

   El servidor proxy DEBE dejar registros de los accesos en la consola
   y/o en un archivo que permitan entender que requests estan pasando
   por el proxy y su resultado.

1.8.  Metricas

   El sistema DEBE implementar mecanismos que recolecten metricas para
   entender el funcionamiento del sistema

   o  cantidad de accesos

   o  bytes transferidos

   o  cualquier otra metrica que considera oportuno para el
      entendimiento del funcionamiento dinamico del sistema

   Las estadisticas PUEDEN ser volatiles (si se reinicia el servidor las
   estadisticas pueden perderse).

1.9.  Transformaciones de mensajes requeridos

   Se DEBE implementar las siguientes transformaciones:

   o  transformar texto a formato l33t: Tendra que ser posible modificar
      el contenido de un recurso que dice ser text/plain realizando las
      siguientes sustituciones:

      *  a por 4 (cuatro)

      *  e por 3 (tres)

      *  i por 1 (uno)

      *  o por 0 (cero)

      *  c por < (menor)

1.10.  Configuracion

   La configuracion referida a transformaciones, multiplexado, etc, DEBE
   poder ser modificada en tiempo de ejecucion de forma remota.

1.11.  Monitoreo Remoto

   El servidor DEBE exponer un servicio (para el cual se DEBE proveer un
   protocolo) para que sea posible monitorear el funcionamiento del



                                                                 [Page 4]

TPE2015-2                Trabajo Especial 2015-2            October 2015


   mismo.  El mismo DEBE proveer el acceso a las estadisticas
   recolectadas.


2.  Requerimientos No Funcionales

2.1.  Performance

   Se DEBE tener en cuenta todos los aspectos que hagan a la buena
   performance y escalabilidad del servidor.  Se espera que se maneje de
   forma eficiente los streams de informacion (ej: mensajes muy
   grandes).  El informe DEBE contener informacion sobre testing de
   stress.  Por ejemplo

   o  cuales es la maxima cantidad de conexiones simultaneas que
      soporta?

   o  como se degrada el throughput?

   o  hay mejoras sustanciales en la doble utilizacion de conexiones
      persistentes?  Mas informacion sobre el tema:

      *  http://www.w3.org/Protocols/HTTP/Performance/Pipeline.html

      *  http://www.isi.edu/touch/pubs/http-perf96/

2.2.  Lenguaje

   El servidor DEBE implementarse con la Java Platform, Standard Edition
   8 Release.  NO SE PODRA utilizar para implementar la parte cliente
   HTTP del proxy los metodos de conexion de la clase URL
   (openConnection, openStream, etc).  Se DEBE implementar un cliente
   HTTP propio.

2.3.  Librerias Externas

   NO SE PODRA utilizar ninguna libreria externa que provea soluciones
   out-of-the-box para los problemas de exponer servicios de red (como
   Apache MINA, Netty, y otros).

   NO SE PODRA utilizar parsers de mensajes de correos (MIME /
   multiparts).

   NO SE PODRA utilizar ninguna libreria externa que implemententen el
   protocolo HTTP de forma parcial o total (como ser httpclient).

   Se PODRA utilizar codificadores y decodificadores ya existentes
   (base64, quoted-printable, gzip, ...).



                                                                 [Page 5]

TPE2015-2                Trabajo Especial 2015-2            October 2015


   Se PODRA utilizar codificadores y decodificadores de XML ya
   existentes, asi como librerias de hash.

   Esta permitido utilizar las librerias:

   o  Apache commons-lang

   o  Apache commons-codec para realizar codificacion y decodificacion.

   o  Junit y Mockito/JMock/EasyMock para testing

   o  Spring Framework / Google Guice para inversion de control.

   o  JAXB para manipular archivos xml como objetos (ej: para la
      configuracion)

   o  ImageIO para manipular imagenes

   o  Log4j, LogBack, SLF4j, Apache commons-logging para realizar
      logging

   Cualquier otra libreria que se quiera usar DEBE tener una licencia
   OSI approved [1] y DEBE ser aprobada por la Catedra.  Para lograr
   esta aprobacion se DEBE enviar un mail a la lista de correo [2] con
   el nombre de la libreria, y el uso que se le quiere dar.  Las
   librerias aprobadas para un grupo automaticamente estan aprobadas
   para todos y por lo tanto PUEDEN ser utilizadas por otros grupos
   siempre y cuando se la use con los mismos fines.


3.  Conformacion de los Grupos

   Para la realizacion del Trabajo Practico los alumnos DEBERAN
   conformar grupos.

   El resto de los alumnos formaran CUATRO grupos de CUATRO integrantes
   cada uno y DOS grupos de TRES integrantes.

   Los grupos de CUATRO integrantes DEBERAN implementar de forma
   obligatoria el requerimiento funcional descripto en la seccion 1.5
   (Conexiones Persistentes).

   Para inscribir un grupo uno de los miembros debera enviar un mail a
   la lista de correo [2] enumerando APELLIDO , LEGAJO, USUARIO EN
   BITBUCKET de todos los integrantes del grupo.  La informacion de
   BITBUCKET es necesaria para poder realizar la entrega digital.

   La inscripcion DEBERA ocurrir antes del Miercoles 14 de Octubre a las



                                                                 [Page 6]

TPE2015-2                Trabajo Especial 2015-2            October 2015


   19:00hs.

   La inscripcion de los grupos se tomara segun el orden de llegada de
   los emails de registracion.

   La evaluacion del Trabajo Practico es de caracter grupal.


4.  Entrega

4.1.  Forma de Entrega

   Todos los grupos deberan entregar el trabajo practico en un sobre en
   cuyo frente se escribira el nombre de la materia, la leyenda "Trabajo
   Especial", los nombres y legajos de quienes integran el grupo y el
   texto que identifica al commit de la entrega digital.

   El material entregado consistira de dos partes:

   1.  Parte impresa: consta del informe presentado.  Debe contener las
       siguientes secciones (manteniendo el orden):

       *  Indice ( por lo tanto las hojas deberan estar numeradas)

       *  Descripcion detallada de los protocolos y aplicaciones
          desarrolladas

       *  Problemas encontrados durante el diseno y la implementacion

       *  Limitaciones de la aplicacion

       *  Posibles extensiones

       *  Conclusiones

       *  Ejemplos de testeo

       *  Guia de instalacion detallada y precisa.  No es necesario
          desarrollar un programa instalador.

       *  Instrucciones para la configuracion.

       *  Ejemplos de configuracion y monitoreo.

       *  Documento de diseno del proyecto (que ayuden a entender la
          arquitectura de la aplicacion)





                                                                 [Page 7]

TPE2015-2                Trabajo Especial 2015-2            October 2015


   2.  Parte digital (una commit en del repositorio provisto por la
       Catedra con el trabajo completo):

       *  Documento mencionados en la seccion anterior.

       *  Codigos fuente del trabajo.

       *  Binarios ejecutables (incluyendo librerias, plugins y otros
          elementos necesarios para su ejecucion).

       *  El documento utilizado para realizar la presentacion (ppt,
          pps, pdf, etc.).  El archivo debe ser legible sistemas
          operativos como Linux y OSX.

       *  Un README con una descripcion del procedimiento necesario para
          compilar y la explicacion de como se debe ejecutar el
          programa.

4.2.  Presentacion Oral

   Lunes 9 de Noviembre a las 19hs.  Cada grupo dispondra de 15 minutos
   para exponer su trabajo.

4.3.  Fecha de Entrega

   Miercoles 11 de Noviembre a las 19.05hs.  Los grupos deberan mostrar
   el correcto funcionamiento del sistema con casos de prueba provisto
   por los equipos y provistos ese dia por la Catedra.

4.4.  Penalizaciones

   o  Leves

         Forma de entrega: en caso de que no se cumpla la forma de
         entrega especificada, se descontara de la nota final medio
         punto.

         Retraso leve: En caso de entregar el sobre fuera del horario
         establecido pero antes del fin del horario de la clase en la
         fecha de entrega se descontara de la nota final medio punto.

   o  Medias

         Retraso medio: en caso de ser entregado en la clase practica
         siguiente se descontaran a la nota final 2 puntos, mas las
         penalizaciones leves que correspondan.





                                                                 [Page 8]

TPE2015-2                Trabajo Especial 2015-2            October 2015


   o  Grave

         Retraso grave: en caso de no entregarse en las fechas
         estipuladas el trabajo se considerara desaprobado y la nota
         sera cero.  Tener en cuenta que por reglamento el Trabajo
         Practico Especial no es recuperable.


5.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
              Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
              Transfer Protocol -- HTTP/1.1", RFC 2616, June 1999.

   [1]  <http:// www.opensource.org/licenses>

   [2]  <mailto:pdc2015-2@googlegroups.com>































                                                                 [Page 9]

